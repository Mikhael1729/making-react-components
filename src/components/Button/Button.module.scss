@import "../../styles/colors.module.scss";
@import "../../styles/text-sizes.scss";
@import "../../styles/form-styles.scss";
@import "~rfs/scss";

/* Variables */
$button-padding: 0.4em;
$current-background: transparent !global;

/* Mixins */
@mixin computeColor($new-background) {

  // Current background.
  @if $new-background !=$primary {
    $current-background: $new-background !global;
  }

  @else {
    $current-background: darken($new-background, 10%) !global;
  }

  &:focus {
    outline: none;
  }

  &.Outline {
    background: transparent;
    color: $current-background;
    border-color: $current-background;

    &:hover {
      background: darken($background-color, 2%);
      color: darken($current-background, 15%);
      border-color: darken($current-background, 15%);
    }

    &:focus {
      $focus-color: lighten($color: $current-background, $amount: 15%);
      color: $focus-color;
      border: 2px solid $focus-color;
    }

    &:active {
      font-weight: bold;
    }
  }

  &.Filled {
    // Computing color.
    $color: $text-color;

    @if $color==$current-background {
      $color: darken($color, 70%);
    }

    background: $current-background;
    color: $color;
    border-color: $color;

    &:hover {
      background: darken($current-background, 10%);
      color: darken($color, 10%);
      border-color: darken($color, 10%);
    }

    &:focus {
      $focus-color: lighten($color: $color, $amount: 15%);
      color: $focus-color;
      border: 2px solid $focus-color;
    }

    &:active {
      font-weight: bold;
    }
  }
}

/* Button: Parent styles */
.Button {
  @include rfs($font-size-regular);
  background-color: inherit;
  color: $text-color;
  border: 1px solid $text-color;
  border-radius: $border-radius;
  padding: $button-padding;
  font-family: 'Consolas';
  text-transform: capitalize;
  display: flex;
  justify-content: center;
  align-items: center;
  align-content: center;
  cursor: pointer;

  a {
    color: $text-color;
  }
}

.Block {
  width: 100%;
}

/* Children container */
.ChildrenContainer {
  display: flex;
  flex-direction: row;
  align-items: center;
  text-align: center;
}

/* Colors */
.PrimaryColor {
  @include computeColor($primary);
}

.SecondaryColor {
  @include computeColor($secondary);
}

.WarningColor {
  @include computeColor($warning);
}

.DefaultColor {
  @include computeColor($text-color);
}

/* Sizes */
.LargeSize {
  @include rfs($font-size-large);
  padding: $button-padding * 2;
}

.MediumSize {
  @include rfs($font-size-regular);
  padding: $button-padding * 1.5;
}

.SmallSize {
  @include rfs($font-size-small);
}

/* Stuff */
.Filled {
  background: $current-background;
}

.Outline {
  background: transparent;
}

/* Shapes */
.CircleButton {
  border-radius: 50%;
  // Margin 0 avoid a deformed circle eleement.
  margin: 0 !important;

  * {
    margin: 0px !important;
  }
}